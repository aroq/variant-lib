tasks:
  git:
    parameters:
    - name: git.repo
      type: string
    - name: git.branch
      type: string
    tasks:
      init:
        script: |
          cat <<EOF
          git init .
          git remote rm origin || true
          git remote add -t {{.git.branch}} -f origin  {{.git.repo}}
          EOF
      pull:
        script: |
          cat <<EOF
          git checkout {{.git.branch}}
          git reset --hard origin/{{.git.branch}}
          git pull origin {{.git.branch}}
          EOF

  general:
    tasks:
      setup:
        tasks:
          keys:
            steps:
            - task: goofys.mount
            - task: ssh.copy_id_rsa

  composer:
    tasks:
      install:
        script: |
          cat <<EOF
          composer install --prefer-dist --optimize-autoloader
          EOF

  goofys:
    tasks:
      mount:
        inputs:
        - name: mount_point
          type: string
          default: "/root/.secrets"
        - name: bucket
          type: string
          default: ""
        - name: mode
          type: string
          default: "0600"

        script: |
          echo "---> Goofys :: Mount bucket"
          if [ -n {{.mount_point}} ]; then
            if [ ! -d {{.mount_point}} ]; then
              mkdir -p {{.mount_point}}
              (nohup goofys -f --file-mode={{.mode}} --sse {{.bucket}} {{.mount_point}}) 2>&1 >>/var/log/goofys.log 2>&1 &
              sleep 5
            fi
          fi

  drupal:
    tasks:
      files:
        parameters:
        - name: ssh.server.project_root_dir
        - name: ssh.server.project_subdirectory
        tasks:
          fix_permissions:
            script: |
              cat <<EOF
              if [ -d docroot/sites/default ]; then chmod 755 docroot/sites/default; fi && \
              if [ -f docroot/sites/default/services.yml ]; then chmod 644 docroot/sites/default/services.yml; fi && \
              if [ -f docroot/sites/default/default.services.yml ]; then chmod 644 docroot/sites/default/default.services.yml; fi && \
              if [ -f docroot/sites/default/settings.php ]; then chmod 644 docroot/sites/default/settings.php; fi && \
              if [ -f docroot/sites/default/default.settings.php ]; then chmod 644 docroot/sites/default/default.settings.php; fi && \
              if [ -d docroot/sites/default/files ]; then chmod 755 docroot/sites/default/files; fi
              EOF
          shared_files_link:
            script: |
              cat <<EOF
              ln -sfn {{.ssh.server.project_root_dir}}/shared/{{.ssh.server.project_subdirectory}}/docroot/sites/default/files \
              {{.ssh.server.project_root_dir}}/current/{{.ssh.server.project_subdirectory}}/docroot/sites/default/files
              EOF
          env_file_link:
            script: |
              cat <<EOF
              ln -sfn {{.ssh.server.project_root_dir}}/shared/{{.ssh.server.project_subdirectory}}/environments/env.settings.php \
              {{.ssh.server.project_root_dir}}/current/{{.ssh.server.project_subdirectory}}/environments/env.settings.php
              EOF

  ssh:
    parameters:
    - name: ssh.server.project_root_dir
      type: string
    - name: ssh.server.project_subdirectory
      type: string
    - name: ssh.server.user
      type: string
    - name: ssh.server.host
      type: string
    tasks:
      copy_id_rsa:
        parameters:
        - name: source_key_path
          type: string
          default: "/root/.secrets/.ssh"
        - name: target_key_path
          type: string
          default: "/root/.ssh"
        - name: source_key_name
          type: string
          default: "id_rsa"
        - name: target_key_name
          type: string
          default: "id_rsa"
        script: |
          echo "---> SSH :: Copy id_rsa key"
          cp -fR {{.source_key_path}}/{{.source_key_name}} {{.target_key_path}}/{{.target_key_name}}

      exec:
        parameters:
        - name: exec_dir
          type: string
        - name: exec_dir_suffix
          type: string
          default: ""
        - name: title
          type: string
          default: ""
        - name: cmd
          type: string
          default: "pwd"
        script: |
          echo "---> {{.title}} :: Executing command: \"set -e; cd {{.exec_dir}}/{{.exec_dir_suffix}}; {{.cmd}}\" through SSH on remote host: {{.ssh.server.user}}@{{.ssh.server.host}}"
          ssh -T {{.ssh.server.user}}@{{.ssh.server.host}} "set -e; cd {{.exec_dir}}/{{.exec_dir_suffix}}; {{.cmd}}"

  stages:
    tasks:
      dev:
        # Register parameters (in fact other tasks with the same name) so they can by used as tasks arguments in steps.
        parameters:
        - name: general.setup.keys
        tasks:
          init:
            # Actual init would be executed as part of above "parameters" processing.
            script: echo "Init..."
          deploy:
            parameters:
            - name: git.init
            - name: git.pull
            - name: drupal.files.fix_permissions
            - name: drupal.files.shared_files_link
            - name: drupal.files.env_file_link
            - name: ssh.server.host
            tasks:
              before:
                steps:
                # Example of executing task with dynamic argument from parameter.
                - task: ssh.exec
                  arguments:
                    title: "Status"
                    cmd: |
                      echo "SSH server host: {{.ssh.server.host}}"
                - task: ssh.exec
                  arguments:
                    title: "Drupal :: Files :: Fix permissions"
                    cmd: '{{.drupal.files.fix_permissions}}'
                - task: ssh.exec
                  arguments:
                    title: "Git :: init"
                    cmd: '{{.git.init}}'
              pull:
                steps:
                - task: ssh.exec
                  arguments:
                    title: "Git :: pull"
                    cmd: '{{.git.pull}}'
              build:
                steps:
                - task: ssh.exec
                  arguments:
                    title: "Composer :: install"
                    cmd: composer install --prefer-dist --optimize-autoloader
              after:
                steps:
                - task: ssh.exec
                  arguments:
                    title: "Drupal :: Files :: Shared files link"
                    cmd: '{{.drupal.files.shared_files_link}}'
                - task: ssh.exec
                  arguments:
                    title: "Drupal :: Files :: Environment file link"
                    cmd: '{{.drupal.files.env_file_link}}'
                - task: ssh.exec
                  arguments:
                    title: "Drupal :: Files :: Fix permissions"
                    cmd: '{{.drupal.files.fix_permissions}}'



